CONTRIBUTING.md[36m:[m    transition and [1;31mmeasurement[m equations) should be upper case, as they are
NEWS.md[36m:[m    pseudo-[1;31mmeasurement[m equation is implemented, the fields in the model object
NEWS.md[36m:[m- Added the `PseudoObservable` type and the `pseudo_[1;31mmeasurement[m` function, which
docs/src/MatlabToJuliaTransition.md[36m:[mthough still imperfect, [1;31mmeasurement[ms of performance. The reduction of 1/5th to
docs/src/MatlabToJuliaTransition.md[36m:[mchanges to the model's equilibrium conditions and [1;31mmeasurement[m equation are
docs/src/advanced_usage.md[36m:[m2. Modify equilibrium conditions or [1;31mmeasurement[m equations
docs/src/advanced_usage.md[36m:[mof parameters, equilibrium conditions (defined by the `eqcond` function) and [1;31mmeasurement[m
docs/src/advanced_usage.md[36m:[mequations (defined by the `[1;31mmeasurement[m` function).  Therefore, the addition of new
docs/src/advanced_usage.md[36m:[m[1;31mmeasurement[m equations necessitate the creation of a new subtype of `AbstractModel.`
docs/src/advanced_usage.md[36m:[m3. Edit the `m990.jl`, `eqcond.jl`, and `[1;31mmeasurement[m.jl` files as you see fit.  If adding
docs/src/contributing.md[36m:[m    transition and [1;31mmeasurement[m equations) should be upper case, as they are
docs/src/estimation.md[36m:[m  [1;31mmeasurement[m equation.
docs/src/forecast.md[36m:[m  `DD` vector from the [1;31mmeasurement[m equation for observables, and the `DD_pseudo`
docs/src/forecast.md[36m:[m  vector from the pseuodo-[1;31mmeasurement[m equation for pseudo-observables.
docs/src/frbny_data.md[36m:[m  number of states, shocks, equilibrium condition equations, and [1;31mmeasurement[m
docs/src/frbny_data.md[36m:[m  enter the [1;31mmeasurement[m equation,
docs/src/implementation_details.md[36m:[m[1;31mmeasurement[m equations.  During optimization, parameters can be transformed from
docs/src/model_design.md[36m:[m  but we often use the pseudo-[1;31mmeasurement[m equation instead of adding new states
docs/src/pkg_structure.md[36m:[m##### `[1;31mmeasurement[m.jl`: Constructs `Model990` [1;31mmeasurement[m equation matrices.
docs/src/pkg_structure.md[36m:[m##### `pseudo_[1;31mmeasurement[m.jl`: Constructs `Model990` pseudo-[1;31mmeasurement[m equation matrices.
docs/src/scenarios.md[36m:[m  y^a_t - y^b_t &= Z(y^a_t - y^b_t) & \mathrm{([1;31mmeasurement[m)}
docs/src/solving.md[36m:[my_t &= Z s_t + D + u_t & u_t &\sim N(0, E) & \mathrm{([1;31mmeasurement[m)}
src/DSGE.jl[36m:[m        Model990, Model1002, Model1010, SmetsWouters, AnSchorfheide, eqcond, [1;31mmeasurement[m, pseudo_[1;31mmeasurement[m,
src/DSGE.jl[36m:[m    include("models/m990/[1;31mmeasurement[m.jl")
src/DSGE.jl[36m:[m    include("models/m990/pseudo_[1;31mmeasurement[m.jl")
src/DSGE.jl[36m:[m    include("models/m1002/[1;31mmeasurement[m.jl")
src/DSGE.jl[36m:[m    include("models/m1002/pseudo_[1;31mmeasurement[m.jl")
src/DSGE.jl[36m:[m    include("models/m1010/[1;31mmeasurement[m.jl")
src/DSGE.jl[36m:[m    include("models/m1010/pseudo_[1;31mmeasurement[m.jl")
src/DSGE.jl[36m:[m    include("models/smets_wouters/[1;31mmeasurement[m.jl")
src/DSGE.jl[36m:[m    include("models/an_schorfheide/[1;31mmeasurement[m.jl")
src/DSGE.jl[36m:[m    include("models/an_schorfheide/pseudo_[1;31mmeasurement[m.jl")
src/analysis/meansbands.jl[36m:[m  - `pseudo`: pseudoobservable (from `pseudo_[1;31mmeasurement[m` equation)
src/analysis/meansbands.jl[36m:[m  pseudo-observable defined in the pseudo-[1;31mmeasurement[m equation.
src/analysis/meansbands.jl[36m:[m  pseudoobservable defined in the pseudo[1;31mmeasurement[m equation.
src/forecast/forecast.jl[36m:[m    # Apply [1;31mmeasurement[m and pseudo-[1;31mmeasurement[m equations
src/models/an_schorfheide/an_schorfheide.jl[36m:[mcolumn indices in the matrix representations of of the [1;31mmeasurement[m equation and
src/models/an_schorfheide/an_schorfheide.jl[36m:[m  the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/an_schorfheide/an_schorfheide.jl[36m:[m  the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/an_schorfheide/an_schorfheide.jl[36m:[m  column in the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/an_schorfheide/an_schorfheide.jl[36m:[m  their columns in the [1;31mmeasurement[m and equilibrium condition equations. These
src/models/an_schorfheide/an_schorfheide.jl[36m:[m  model's [1;31mmeasurement[m equation matrices.
src/models/an_schorfheide/an_schorfheide.jl[36m:[m  a row in the model's pseudo-[1;31mmeasurement[m equation matrices.
src/models/an_schorfheide/an_schorfheide.jl[36m:[m    exogenous_shocks::OrderedDict{Symbol,Int}              # [1;31mmeasurement[m and equilibrium condition equations.
src/models/an_schorfheide/an_schorfheide.jl[36m:[m    # Lagged states and observables [1;31mmeasurement[m error
src/models/an_schorfheide/measurement.jl[36m:[m[1;31mmeasurement[m{T<:AbstractFloat}(m::AnSchorfheide{T}, TTT::Matrix{T},
src/models/an_schorfheide/measurement.jl[36m:[mAssign [1;31mmeasurement[m equation
src/models/an_schorfheide/measurement.jl[36m:[mfunction [1;31mmeasurement[m{T<:AbstractFloat}(m::AnSchorfheide{T},
src/models/an_schorfheide/pseudo_measurement.jl[36m:[mpseudo_[1;31mmeasurement[m{T<:AbstractFloat}(m::AnSchorfheide{T},
src/models/an_schorfheide/pseudo_measurement.jl[36m:[mAssign pseudo-[1;31mmeasurement[m equation (a linear combination of states):
src/models/an_schorfheide/pseudo_measurement.jl[36m:[mfunction pseudo_[1;31mmeasurement[m{T<:AbstractFloat}(m::AnSchorfheide{T},
src/models/m1002/augment_states.jl[36m:[m    # e_lr â€“ [1;31mmeasurement[m errors for the two real wage observables built in
src/models/m1002/m1002.jl[36m:[mcolumn indices in the matrix representations of of the [1;31mmeasurement[m equation and
src/models/m1002/m1002.jl[36m:[m  the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/m1002/m1002.jl[36m:[m  the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/m1002/m1002.jl[36m:[m  column in the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/m1002/m1002.jl[36m:[m  their columns in the [1;31mmeasurement[m and equilibrium condition equations. These
src/models/m1002/m1002.jl[36m:[m  model's [1;31mmeasurement[m equation matrices.
src/models/m1002/m1002.jl[36m:[m  a row in the model's pseudo-[1;31mmeasurement[m equation matrices.
src/models/m1002/m1002.jl[36m:[m    exogenous_shocks::OrderedDict{Symbol,Int}              # [1;31mmeasurement[m and equilibrium condition equations.
src/models/m1002/m1002.jl[36m:[m    # Lagged states and observables [1;31mmeasurement[m error
src/models/m1002/measurement.jl[36m:[m[1;31mmeasurement[m{T<:AbstractFloat}(m::Model1002{T}, TTT::Matrix{T}, RRR::Matrix{T},
src/models/m1002/measurement.jl[36m:[mAssign [1;31mmeasurement[m equation
src/models/m1002/measurement.jl[36m:[mfunction [1;31mmeasurement[m{T<:AbstractFloat}(m::Model1002{T},
src/models/m1002/measurement.jl[36m:[m    # Adjustment to DD because [1;31mmeasurement[m equation assumes CCC is the zero vector
src/models/m1002/pseudo_measurement.jl[36m:[mpseudo_[1;31mmeasurement[m{T<:AbstractFloat}(m::Model1002{T},
src/models/m1002/pseudo_measurement.jl[36m:[mAssign pseudo-[1;31mmeasurement[m equation (a linear combination of states):
src/models/m1002/pseudo_measurement.jl[36m:[mfunction pseudo_[1;31mmeasurement[m{T<:AbstractFloat}(m::Model1002{T},
src/models/m1002/subspecs.jl[36m:[m        # See [1;31mmeasurement[m equation
src/models/m1010/augment_states.jl[36m:[m    # e_lr â€“ [1;31mmeasurement[m errors for the two real wage observables built in
src/models/m1010/m1010.jl[36m:[mcolumn indices in the matrix representations of of the [1;31mmeasurement[m equation and
src/models/m1010/m1010.jl[36m:[m  the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/m1010/m1010.jl[36m:[m  the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/m1010/m1010.jl[36m:[m  column in the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/m1010/m1010.jl[36m:[m  their columns in the [1;31mmeasurement[m and equilibrium condition equations. These
src/models/m1010/m1010.jl[36m:[m  model's [1;31mmeasurement[m equation matrices.
src/models/m1010/m1010.jl[36m:[m  a row in the model's pseudo-[1;31mmeasurement[m equation matrices.
src/models/m1010/m1010.jl[36m:[m    exogenous_shocks::OrderedDict{Symbol,Int}              # [1;31mmeasurement[m and equilibrium condition equations.
src/models/m1010/m1010.jl[36m:[m    # Lagged states and observables [1;31mmeasurement[m error
src/models/m1010/m1010.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/m1010.jl[36m:[m                   description="Ïƒ_AAA: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the AAA spread.",
src/models/m1010/measurement.jl[36m:[m[1;31mmeasurement[m{T<:AbstractFloat}(m::Model1010{T}, TTT::Matrix{T}, RRR::Matrix{T},
src/models/m1010/measurement.jl[36m:[mAssign [1;31mmeasurement[m equation
src/models/m1010/measurement.jl[36m:[mfunction [1;31mmeasurement[m{T<:AbstractFloat}(m::Model1010{T},
src/models/m1010/measurement.jl[36m:[m    # If shocks = true, then return [1;31mmeasurement[m equation matrices with rows and columns for
src/models/m1010/measurement.jl[36m:[m    # coefficient for the [1;31mmeasurement[m error.
src/models/m1010/measurement.jl[36m:[m    # coefficient for the [1;31mmeasurement[m error.
src/models/m1010/measurement.jl[36m:[m    # Adjustment to DD because [1;31mmeasurement[m equation assumes CCC is the zero vector
src/models/m1010/pseudo_measurement.jl[36m:[mpseudo_[1;31mmeasurement[m{T<:AbstractFloat}(m::Model1010{T},
src/models/m1010/pseudo_measurement.jl[36m:[mAssign pseudo-[1;31mmeasurement[m equation (a linear combination of states):
src/models/m1010/pseudo_measurement.jl[36m:[mfunction pseudo_[1;31mmeasurement[m{T<:AbstractFloat}(m::Model1010{T},
src/models/m1010/subspecs.jl[36m:[m    # with iid [1;31mmeasurement[m error on the BAA spread [1;31mmeasurement[m error in addition to the AAA.
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m    # ss2, with AR(1) process for AAA spread [1;31mmeasurement[m error
src/models/m1010/subspecs.jl[36m:[m    # ss4, with AR(1) process for BBB spread [1;31mmeasurement[m error in addition to AAA
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m    # ss1, with iid [1;31mmeasurement[m error on BBB spread
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m    # Leave lnb_liq, lnb_safe fixed. AR(1) [1;31mmeasurement[m error on both spreads (like ss5).
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m    # Leave lnb_liq, lnb_safe fixed. AR(1) [1;31mmeasurement[m error on both spreads (like ss5),
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_AAA: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the AAA spread.",
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m    # Leave lnb_liq, lnb_safe fixed. AR(1) [1;31mmeasurement[m error on both spreads (like ss5),
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_AAA: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the AAA spread.",
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m    # Leave lnb_liq, lnb_safe fixed. AR(1) [1;31mmeasurement[m error on both spreads (like ss5),
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_AAA: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the AAA spread.",
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m    # ss12 with AR(1) on [1;31mmeasurement[m error
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m    # ss13, but not adjusting for maturities in the [1;31mmeasurement[m equation
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m1010/subspecs.jl[36m:[m                   description="Ïƒ_BBB: Standard deviation on the AR(1) process for [1;31mmeasurement[m error on the BBB spread.",
src/models/m990/augment_states.jl[36m:[m    # e_lr â€“ [1;31mmeasurement[m errors for the two real wage observables built in
src/models/m990/m990.jl[36m:[mcolumn indices in the matrix representations of of the [1;31mmeasurement[m equation and
src/models/m990/m990.jl[36m:[m  the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/m990/m990.jl[36m:[m  the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/m990/m990.jl[36m:[m  column in the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/m990/m990.jl[36m:[m  their columns in the [1;31mmeasurement[m and equilibrium condition equations. These
src/models/m990/m990.jl[36m:[m  model's [1;31mmeasurement[m equation matrices.
src/models/m990/m990.jl[36m:[m  a row in the model's pseudo-[1;31mmeasurement[m equation matrices.
src/models/m990/m990.jl[36m:[m    exogenous_shocks::OrderedDict{Symbol,Int}              # [1;31mmeasurement[m and equilibrium condition equations.
src/models/m990/m990.jl[36m:[m    # Lagged states and observables [1;31mmeasurement[m error
src/models/m990/measurement.jl[36m:[m[1;31mmeasurement[m{T<:AbstractFloat}(m::Model990{T}, TTT::Matrix{T}, RRR::Matrix{T},
src/models/m990/measurement.jl[36m:[mAssign [1;31mmeasurement[m equation
src/models/m990/measurement.jl[36m:[mfunction [1;31mmeasurement[m{T<:AbstractFloat}(m::Model990{T},
src/models/m990/measurement.jl[36m:[m    # Adjustment to DD because [1;31mmeasurement[m equation assumes CCC is the zero vector
src/models/m990/pseudo_measurement.jl[36m:[mpseudo_[1;31mmeasurement[m{T<:AbstractFloat}(m::Model990{T},
src/models/m990/pseudo_measurement.jl[36m:[mAssign pseudo-[1;31mmeasurement[m equation (a linear combination of states):
src/models/m990/pseudo_measurement.jl[36m:[mfunction pseudo_[1;31mmeasurement[m{T<:AbstractFloat}(m::Model990{T},
src/models/m990/subspecs.jl[36m:[m        # See [1;31mmeasurement[m equation
src/models/smets_wouters/measurement.jl[36m:[m[1;31mmeasurement[m{T<:AbstractFloat}(m::SmetsWouters{T}, TTT::Matrix{T}, RRR::Matrix{T},
src/models/smets_wouters/measurement.jl[36m:[mAssign [1;31mmeasurement[m equation
src/models/smets_wouters/measurement.jl[36m:[mfunction [1;31mmeasurement[m{T<:AbstractFloat}(m::SmetsWouters{T},
src/models/smets_wouters/measurement.jl[36m:[m    # Adjustment to DD because [1;31mmeasurement[m equation assumes CCC is the zero vector
src/models/smets_wouters/smets_wouters.jl[36m:[mcolumn indices in the matrix representations of of the [1;31mmeasurement[m equation and
src/models/smets_wouters/smets_wouters.jl[36m:[m  the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/smets_wouters/smets_wouters.jl[36m:[m  the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/smets_wouters/smets_wouters.jl[36m:[m  column in the [1;31mmeasurement[m and equilibrium condition matrices.
src/models/smets_wouters/smets_wouters.jl[36m:[m  their columns in the [1;31mmeasurement[m and equilibrium condition equations. These
src/models/smets_wouters/smets_wouters.jl[36m:[m  model's [1;31mmeasurement[m equation matrices.
src/models/smets_wouters/smets_wouters.jl[36m:[m  a row in the model's pseudo-[1;31mmeasurement[m equation matrices.
src/models/smets_wouters/smets_wouters.jl[36m:[m    exogenous_shocks::OrderedDict{Symbol,Int}              # [1;31mmeasurement[m and equilibrium condition equations.
src/models/smets_wouters/smets_wouters.jl[36m:[m    # Lagged states and observables [1;31mmeasurement[m error
src/models/smets_wouters/subspecs.jl[36m:[m        # See [1;31mmeasurement[m equation
src/models/smets_wouters/subspecs.jl[36m:[m        # See [1;31mmeasurement[m equation
src/models/smets_wouters/subspecs.jl[36m:[mInitializes a SmetsWouters model with [1;31mmeasurement[m error equal to standard deviation of the
src/scenarios/forecast.jl[36m:[m    system.[1;31mmeasurement[m.QQ = copy(system[:QQ])
src/scenarios/forecast.jl[36m:[m    # Error out if there is nonzero [1;31mmeasurement[m error
src/scenarios/forecast.jl[36m:[m        error("Can't simulate scenarios under nonzero [1;31mmeasurement[m error")
src/statespace.jl[36m:[mThe [1;31mmeasurement[m equation of the state-space model takes the form
src/statespace.jl[36m:[mwhere the error `u_t` is the [1;31mmeasurement[m error, which is uncorrelated with the
src/statespace.jl[36m:[m- `ZZ`: the `Ny` x `Ns`  [1;31mmeasurement[m matrix
src/statespace.jl[36m:[m- `EE`: the `Ny` x `Ny` covariance matrix for the [1;31mmeasurement[m error `Î·_t`
src/statespace.jl[36m:[mfunction [1;31mmeasurement[m(m::AbstractModel, trans::Transition; shocks::Bool=true)
src/statespace.jl[36m:[m    [1;31mmeasurement[m(m, TTT, RRR, CCC; shocks=shocks)
src/statespace.jl[36m:[mThe pseudo-[1;31mmeasurement[m equation of the state-space model takes the form
src/statespace.jl[36m:[m- `ZZ_pseudo`: the `Nx` x `Ns` pseudo-[1;31mmeasurement[m matrix
src/statespace.jl[36m:[mA type containing the transition and [1;31mmeasurement[m equations for a
src/statespace.jl[36m:[m    [1;31mmeasurement[m::Measurement{T}
src/statespace.jl[36m:[m    pseudo_[1;31mmeasurement[m::PseudoMeasurement{T}
src/statespace.jl[36m:[mfunction System{T<:AbstractFloat}(transition::Transition{T}, [1;31mmeasurement[m::Measurement{T})
src/statespace.jl[36m:[m    # Initialize empty pseudo-[1;31mmeasurement[m equation
src/statespace.jl[36m:[m    pseudo_[1;31mmeasurement[m = PseudoMeasurement(ZZ_pseudo, DD_pseudo)
src/statespace.jl[36m:[m    return System(transition, [1;31mmeasurement[m, pseudo_[1;31mmeasurement[m)
src/statespace.jl[36m:[m    if d in (:transition, :[1;31mmeasurement[m, :pseudo_[1;31mmeasurement[m)
src/statespace.jl[36m:[m    elseif d in fieldnames(system.[1;31mmeasurement[m)
src/statespace.jl[36m:[m        return getfield(system.[1;31mmeasurement[m, d)
src/statespace.jl[36m:[m    elseif d in fieldnames(system.pseudo_[1;31mmeasurement[m)
src/statespace.jl[36m:[m        return getfield(system.pseudo_[1;31mmeasurement[m, d)
src/statespace.jl[36m:[m    # Solve [1;31mmeasurement[m equation
src/statespace.jl[36m:[m    [1;31mmeasurement[m_equation = [1;31mmeasurement[m(m, TTT, RRR, CCC)
src/statespace.jl[36m:[m    if method_exists(pseudo_[1;31mmeasurement[m, type_tuple)
src/statespace.jl[36m:[m        # Solve pseudo-[1;31mmeasurement[m equation
src/statespace.jl[36m:[m        pseudo_[1;31mmeasurement[m_equation = pseudo_[1;31mmeasurement[m(m, TTT, RRR, CCC)
src/statespace.jl[36m:[m        return System(transition_equation, [1;31mmeasurement[m_equation, pseudo_[1;31mmeasurement[m_equation)
src/statespace.jl[36m:[m        return System(transition_equation, [1;31mmeasurement[m_equation)
src/statespace.jl[36m:[m- `Î¨::Function`: [1;31mmeasurement[m equation
src/statespace.jl[36m:[m- `F_u::Distributions.MvNormal`: [1;31mmeasurement[m error distribution
src/statespace.jl[36m:[m    # Define transition and [1;31mmeasurement[m functions
src/statespace.jl[36m:[m    # Define shock and [1;31mmeasurement[m error distributions
src/statespace.jl[36m:[m    system.[1;31mmeasurement[m.DD = zeros(size(system[:DD]))
src/statespace.jl[36m:[m    system.pseudo_[1;31mmeasurement[m.DD_pseudo = zeros(size(system[:DD_pseudo]))
test/core.jl[36m:[m# Pseudo-[1;31mmeasurement[m equation matrices in Systems
test/models/an_schorfheide/an_schorfheide.jl[36m:[m# Transition and [1;31mmeasurement[m equations
test/models/an_schorfheide/an_schorfheide.jl[36m:[mmeas = [1;31mmeasurement[m(model, TTT, RRR, CCC)
test/models/m1002/m1002.jl[36m:[m# Transition and [1;31mmeasurement[m equations
test/models/m1002/m1002.jl[36m:[mmeas = [1;31mmeasurement[m(model, TTT, RRR, CCC)
test/models/m1002/m1002.jl[36m:[m### Pseudo-[1;31mmeasurement[m equation
test/models/m1002/m1002.jl[36m:[mpseudo_meas = pseudo_[1;31mmeasurement[m(model, TTT, RRR, CCC)
test/models/m1010/m1010.jl[36m:[m# Transition and [1;31mmeasurement[m equations
test/models/m1010/m1010.jl[36m:[mmeas = [1;31mmeasurement[m(model, TTT, RRR, CCC)
test/models/m1010/m1010.jl[36m:[m### Pseudo-[1;31mmeasurement[m equation
test/models/m1010/m1010.jl[36m:[mpseudo_meas = pseudo_[1;31mmeasurement[m(model, TTT, RRR, CCC)
test/models/m990/m990.jl[36m:[mh5 = h5open("$path/[1;31mmeasurement[m.h5")
test/models/m990/m990.jl[36m:[mactual = [1;31mmeasurement[m(model, TTT, RRR, CCC)
test/models/m990/m990.jl[36m:[m### Pseudo-[1;31mmeasurement[m equation
test/models/m990/m990.jl[36m:[mjld = jldopen("$path/pseudo_[1;31mmeasurement[m.jld")
test/models/m990/m990.jl[36m:[mactual = pseudo_[1;31mmeasurement[m(model, TTT, RRR, CCC)
test/models/smets_wouters/smets_wouters.jl[36m:[mh5 = h5open("$path/[1;31mmeasurement[m.h5")
test/models/smets_wouters/smets_wouters.jl[36m:[mactual = [1;31mmeasurement[m(sw, TTT, RRR, CCC)
test/plot/plot.jl[36m:[m# Plot scenario, zeroing out [1;31mmeasurement[m error
Binary file test/reference/forecast_args.jld matches
test/scenarios/drivers.jl[36m:[m# Zero out [1;31mmeasurement[m error (or else filtering shocks won't work exactly)
test/scenarios/forecast.jl[36m:[m# Check compute_scenario_system throws error before zeroing out [1;31mmeasurement[m error
test/scenarios/forecast.jl[36m:[m# Zero out [1;31mmeasurement[m error (or else filtering shocks won't work exactly)
